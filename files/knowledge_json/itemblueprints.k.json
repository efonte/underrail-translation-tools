{
  "Header": "F9538B831F363243BAAE0D17865D0854B46AF3C961000000",
  "Records": [
    {
      "RootId": 1,
      "HeaderId": -1,
      "MajorVersion": 1,
      "MinorVersion": 0,
      "RecordTypeEnum": "SerializedStreamHeader"
    },
    {
      "LibraryId": 2,
      "LibraryName": "X",
      "RecordTypeEnum": "BinaryLibrary"
    },
    {
      "ClassInfo": {
        "ObjectId": 1,
        "Name": "KI",
        "MemberCount": 227,
        "MemberNames": [
          "KI:S:Count",
          "KI:S:0:Key",
          "KI:S:0:Value",
          "KI:S:1:Key",
          "KI:S:1:Value",
          "KI:S:2:Key",
          "KI:S:2:Value",
          "KI:S:3:Key",
          "KI:S:3:Value",
          "KI:S:4:Key",
          "KI:S:4:Value",
          "KI:S:5:Key",
          "KI:S:5:Value",
          "KI:S:6:Key",
          "KI:S:6:Value",
          "KI:S:7:Key",
          "KI:S:7:Value",
          "KI:S:8:Key",
          "KI:S:8:Value",
          "KI:S:9:Key",
          "KI:S:9:Value",
          "KI:S:10:Key",
          "KI:S:10:Value",
          "KI:S:11:Key",
          "KI:S:11:Value",
          "KI:S:12:Key",
          "KI:S:12:Value",
          "KI:S:13:Key",
          "KI:S:13:Value",
          "KI:S:14:Key",
          "KI:S:14:Value",
          "KI:S:15:Key",
          "KI:S:15:Value",
          "KI:S:16:Key",
          "KI:S:16:Value",
          "KI:S:17:Key",
          "KI:S:17:Value",
          "KI:S:18:Key",
          "KI:S:18:Value",
          "KI:S:19:Key",
          "KI:S:19:Value",
          "KI:S:20:Key",
          "KI:S:20:Value",
          "KI:S:21:Key",
          "KI:S:21:Value",
          "KI:S:22:Key",
          "KI:S:22:Value",
          "KI:S:23:Key",
          "KI:S:23:Value",
          "KI:S:24:Key",
          "KI:S:24:Value",
          "KI:S:25:Key",
          "KI:S:25:Value",
          "KI:S:26:Key",
          "KI:S:26:Value",
          "KI:S:27:Key",
          "KI:S:27:Value",
          "KI:S:28:Key",
          "KI:S:28:Value",
          "KI:S:29:Key",
          "KI:S:29:Value",
          "KI:S:30:Key",
          "KI:S:30:Value",
          "KI:S:31:Key",
          "KI:S:31:Value",
          "KI:S:32:Key",
          "KI:S:32:Value",
          "KI:S:33:Key",
          "KI:S:33:Value",
          "KI:S:34:Key",
          "KI:S:34:Value",
          "KI:S:35:Key",
          "KI:S:35:Value",
          "KI:S:36:Key",
          "KI:S:36:Value",
          "KI:S:37:Key",
          "KI:S:37:Value",
          "KI:S:38:Key",
          "KI:S:38:Value",
          "KI:S:39:Key",
          "KI:S:39:Value",
          "KI:S:40:Key",
          "KI:S:40:Value",
          "KI:S:41:Key",
          "KI:S:41:Value",
          "KI:S:42:Key",
          "KI:S:42:Value",
          "KI:S:43:Key",
          "KI:S:43:Value",
          "KI:S:44:Key",
          "KI:S:44:Value",
          "KI:S:45:Key",
          "KI:S:45:Value",
          "KI:S:46:Key",
          "KI:S:46:Value",
          "KI:S:47:Key",
          "KI:S:47:Value",
          "KI:S:48:Key",
          "KI:S:48:Value",
          "KI:S:49:Key",
          "KI:S:49:Value",
          "KI:S:50:Key",
          "KI:S:50:Value",
          "KI:S:51:Key",
          "KI:S:51:Value",
          "KI:S:52:Key",
          "KI:S:52:Value",
          "KI:S:53:Key",
          "KI:S:53:Value",
          "KI:S:54:Key",
          "KI:S:54:Value",
          "KI:S:55:Key",
          "KI:S:55:Value",
          "KI:S:56:Key",
          "KI:S:56:Value",
          "KI:S:57:Key",
          "KI:S:57:Value",
          "KI:S:58:Key",
          "KI:S:58:Value",
          "KI:S:59:Key",
          "KI:S:59:Value",
          "KI:S:60:Key",
          "KI:S:60:Value",
          "KI:S:61:Key",
          "KI:S:61:Value",
          "KI:S:62:Key",
          "KI:S:62:Value",
          "KI:S:63:Key",
          "KI:S:63:Value",
          "KI:S:64:Key",
          "KI:S:64:Value",
          "KI:S:65:Key",
          "KI:S:65:Value",
          "KI:S:66:Key",
          "KI:S:66:Value",
          "KI:S:67:Key",
          "KI:S:67:Value",
          "KI:S:68:Key",
          "KI:S:68:Value",
          "KI:S:69:Key",
          "KI:S:69:Value",
          "KI:S:70:Key",
          "KI:S:70:Value",
          "KI:S:71:Key",
          "KI:S:71:Value",
          "KI:S:72:Key",
          "KI:S:72:Value",
          "KI:S:73:Key",
          "KI:S:73:Value",
          "KI:S:74:Key",
          "KI:S:74:Value",
          "KI:S:75:Key",
          "KI:S:75:Value",
          "KI:S:76:Key",
          "KI:S:76:Value",
          "KI:S:77:Key",
          "KI:S:77:Value",
          "KI:S:78:Key",
          "KI:S:78:Value",
          "KI:S:79:Key",
          "KI:S:79:Value",
          "KI:S:80:Key",
          "KI:S:80:Value",
          "KI:S:81:Key",
          "KI:S:81:Value",
          "KI:S:82:Key",
          "KI:S:82:Value",
          "KI:S:83:Key",
          "KI:S:83:Value",
          "KI:S:84:Key",
          "KI:S:84:Value",
          "KI:S:85:Key",
          "KI:S:85:Value",
          "KI:S:86:Key",
          "KI:S:86:Value",
          "KI:S:87:Key",
          "KI:S:87:Value",
          "KI:S:88:Key",
          "KI:S:88:Value",
          "KI:S:89:Key",
          "KI:S:89:Value",
          "KI:S:90:Key",
          "KI:S:90:Value",
          "KI:S:91:Key",
          "KI:S:91:Value",
          "KI:S:92:Key",
          "KI:S:92:Value",
          "KI:S:93:Key",
          "KI:S:93:Value",
          "KI:S:94:Key",
          "KI:S:94:Value",
          "KI:S:95:Key",
          "KI:S:95:Value",
          "KI:S:96:Key",
          "KI:S:96:Value",
          "KI:S:97:Key",
          "KI:S:97:Value",
          "KI:S:98:Key",
          "KI:S:98:Value",
          "KI:S:99:Key",
          "KI:S:99:Value",
          "KI:S:100:Key",
          "KI:S:100:Value",
          "KI:S:101:Key",
          "KI:S:101:Value",
          "KI:S:102:Key",
          "KI:S:102:Value",
          "KI:S:103:Key",
          "KI:S:103:Value",
          "KI:S:104:Key",
          "KI:S:104:Value",
          "KI:S:105:Key",
          "KI:S:105:Value",
          "KI:S:106:Key",
          "KI:S:106:Value",
          "KI:S:107:Key",
          "KI:S:107:Value",
          "KI:S:108:Key",
          "KI:S:108:Value",
          "KI:S:109:Key",
          "KI:S:109:Value",
          "KI:S:110:Key",
          "KI:S:110:Value",
          "KI:S:111:Key",
          "KI:S:111:Value",
          "KI:S:112:Key",
          "KI:S:112:Value"
        ]
      },
      "MemberTypeInfo": {
        "BinaryTypeEnums": [
          "Primitive",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String",
          "String"
        ],
        "AdditionalInfos": [
          "Int32",
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null,
          null
        ]
      },
      "LibraryId": 2,
      "Values": [
        113,
        {
          "ObjectId": 3,
          "Value": "leatherarmor",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 4,
          "Value": "Though they offer only light protection against mechanical attacks, leather armors often have other benefits based on the type of skin used in their crafting.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 5,
          "Value": "psibooster",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 6,
          "Value": "This concoction contains moderate levels of psycho-catalytic substances that enhance psionic regeneration with no known side effects. It requires the extract from Lacesso Gigantus mushroom, commonly known as 'Mindshroom'.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 7,
          "Value": "psiinhalant",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 8,
          "Value": "A disposable psi inhalant is the safest and most common way of replenishing psi reserves. It requires unsaturated psionic catalyst, pure oxygen and some sort of a filter.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 9,
          "Value": "minddarts",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 10,
          "Value": "'Mind Dart' is a variation of psi booster with addition of toxic and hallucinogenic substances extracted from the Red Dream mushroom. This mixture is highly dangerous to the consumer and should be taken in multiple smaller doses (if at all). It provides an instant surge of psionic activity as well as increases psi regeneration greatly for a short period of time, but is inevitably followed by a long period of psionic withdrawal.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 11,
          "Value": "shieldrecharger",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 12,
          "Value": "While activate shield emitters cannot recharge their batteries by siphoning from their energy core, but they can however be recharged directly with adequate electromagnetic waves.\r\n\r\nShield recharger is a portable device that can emit these waves. It consists of two major parts: its own energy core and electromagnetic emitter.\r\n\r\nThis device also supports modulation.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 13,
          "Value": "tntc",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 14,
          "Value": "Timer triggered TNT charges are often used to clear up passages and bust open sealed doors of abandoned (or not so abandoned) stations to make way for scavengers.\r\n\r\nIt is easy to build and relatively inexpensive compared to its more powerful C-4 counterpart.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 15,
          "Value": "gr",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 16,
          "Value": "There are two types of conventional explosive hand grenades: \r\n\r\n- Fragmentation (frag) grenade which is used as an anti-personnel weapon\r\n\r\n- High-explosive grenade which is primarily used against heavily armored targets.\r\n\r\nThe type of the grenade created is dictated by its case, while its power depends on the combination of explosive fillings used.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 17,
          "Value": "xbow",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 18,
          "Value": "Although not as devastating as firearms or energy weapons, crossbow is still a dangerous device. The bolts it fires can be rigged with explosives or coated with poison, but are otherwise generally less efficient against heavily armored targets. On the other hand, since bolts fly at a relatively low speed they penetrate energy shields more easily.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 19,
          "Value": "pistol",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 20,
          "Value": "Pistols can be created from frame and barrel parts. The type and quality of the frame will determine the pistol's overall damage potential, while the barrel will dictate the payload. Not all frame types support all barrel types, however.\r\n\r\nA number of optional components can also be added to further enhance the weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 21,
          "Value": "sniper",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 22,
          "Value": "Sniper rifles can be created from frame, barrel and scope parts. The type and quality of the frame will determine the rifle's overall damage potential, while the barrel will dictate the payload. Scope will influence the rifle's precision, critical hit chance and other qualities.\r\n\r\nA number of optional components can also be added to further enhance the weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 23,
          "Value": "tacticalvest",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 24,
          "Value": "Tactical vest is a type of ballistic vest intended to be used as personal armor when engaging in firearm combat. \r\n\r\nIt consists of ballistic panel placed inside a carrier vest and optionally reinforced with heavy metal or ceramic plates.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 25,
          "Value": "riotgear",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 26,
          "Value": "Riot armor is a special type of tactical armor that is efficient against both firearms and melee attacks.\r\n\r\nIt consists of ballistic panel placed inside a carrier vest. It may also include a shield for added protection against melee attacks and/or a coat.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 27,
          "Value": "metalarmor",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 28,
          "Value": "Metal armors provide excellent protection against mechanical attacks of all kinds and good protection against high energy attacks.\r\n\r\nWith right enhancements they can also be used offensively in melee combat.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 29,
          "Value": "smg",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 30,
          "Value": "Submachine gun, sometimes called personal defense weapon (PDW), is a compact automatic weapon.\r\n\r\nIt can be created from frame and barrel parts. The type and quality of the frame will determine the weapon's overall damage potential, while the barrel will dictate the payload. Not all frame types support all barrel types, however.\r\n\r\nA number of optional components can also be added to further enhance the weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 31,
          "Value": "sledgehammer",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 32,
          "Value": "Sledgehammer can be a powerful melee weapon in the hands of strong wielder.\r\n\r\nA powerful sledgehammer strike can send damaging mechanical waves even through the thickest of armors.\r\n\r\nIt can even carry some manner of power module for when the cold steel isn't enough.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 33,
          "Value": "combatknife",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 34,
          "Value": "Combat knives can be crafted out of any metal and come in number of different shapes depending on the mold used.\r\n\r\nThey are quick and deadly close quarters weapons against unarmored or unsuspecting targets.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 35,
          "Value": "assaultrifle",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 36,
          "Value": "Assault rifle is a light automatic rifle designed for mobile individual use.\r\n\r\nIt can be created from frame and barrel parts. The type and quality of the frame will determine the weapon's overall damage potential, while the barrel will dictate the payload. Not all frame types support all barrel types, however.\r\n\r\nA number of optional components can also be added to further enhance the weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 37,
          "Value": "energypistol",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 38,
          "Value": "Energy weapons are generally less devastating than firearms, but they are more precise and can easily pierce most armor types.\r\n\r\nEnergy pistol can be constructed from an energy projector, such as laser emitter or plasma discharger, and energy core. The quality of the former affects the output power, while the latter determines battery capacity.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 39,
          "Value": "chemicalpistol",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 40,
          "Value": "Chemical pistol can be crafted by mounting a chemical collector and a dispenser onto a special pistol frame. \r\n\r\nType of collector will determine the substance the pistol can fire, while dispenser will determine in what form the substance is fired.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 41,
          "Value": "extracttoxin",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 42,
          "Value": "A number of bodily fluids, such as blood, toxins, and acid, can extracted be from organs of various creatures.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 43,
          "Value": "processplant",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 44,
          "Value": "Various useful chemicals can be extracted from plants and mushrooms.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 45,
          "Value": "extracttoxin-old",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 46,
          "Value": "Toxins can be extracted from organs of various creatures.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 47,
          "Value": "chemicalbolt",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 48,
          "Value": "Crossbow bolts can carry various substances that they inject upon impact, such as poisons and tranquilizers.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 49,
          "Value": "mechanicalbolt-old",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 50,
          "Value": "You can create special mechanical bolts by adding extra features to the bolt's head, such as serrated blades.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 51,
          "Value": "mechanicalbolt",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 52,
          "Value": "You can create serrated bolts by adding serrated blades to the bolt's head.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 53,
          "Value": "broadheadbolt",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 54,
          "Value": "You can create broadhead bolts if you have appropriate bolt tip.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 55,
          "Value": "shockbolt",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 56,
          "Value": "A shock bolt is created by attaching a number of micro electroshock dischargers to a regular bolt. The number of dischargers determines the power of the shock bolt, but also the crafting difficulty. \r\n\r\nA sufficiently powerful energy battery is required to charge up the bolt.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 57,
          "Value": "incendiarybolt",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 58,
          "Value": "An incendiary bolt is created by attaching a vial of any highly incendiary substance to the tip of a regular bolt.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 59,
          "Value": "empgrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 60,
          "Value": "EMP grenades are created by combining electromagnetic dischargers with any high energy battery (such as plasma or fusion cell) inside a thin grenade case.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 61,
          "Value": "cloakingdevice",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 62,
          "Value": "A visible light deflection field generator, commonly known as stealth generator or cloaking device, is created by attaching electromagnetic deflector to a high energy core. The quality of the former determines the cloaking potential. Finally, electromagnetic field stabilizer is added to improve efficiency.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 63,
          "Value": "metalhelmet",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 64,
          "Value": "Metal helmets provide decent protection against mechanical and energy attacks and also reduce the chance for the wearer to be critically hit.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 65,
          "Value": "goggles",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 66,
          "Value": "Goggles have two main components: the pair of lenses that provide various advantages (sometimes coupled with disadvantages) to the wearer at all times; and an optional vision processing module that also requires a power core to be installed in order to work.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 67,
          "Value": "boots",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 68,
          "Value": "Boots can be made out of leather or metal and padded with a number of different materials.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 69,
          "Value": "greaves",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 70,
          "Value": "Greaves can be made out of metal and padded with a number of different materials.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 71,
          "Value": "mine",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 72,
          "Value": "There are two types of conventional explosive land mines: \r\n\r\n- Fragmentation (frag) mine which is used as an anti-personnel weapon\r\n\r\n- High-explosive mine which is primarily used against heavily armored targets.\r\n\r\nThe type of the land mine created is dictated by its case, while its power depends on the combination of explosive fillings used.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 73,
          "Value": "empmine-old",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 74,
          "Value": "EMP mines are created by combining two electromagnetic dischargers with a pair of any high energy battery (such as plasma or fusion cell) inside a special EMP mine case.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 75,
          "Value": "empmine",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 76,
          "Value": "An EMP mine can be created by combining electromagnetic dischargers with any high energy battery (such as plasma or fusion cell) inside a special EMP mine case.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 77,
          "Value": "chemicalammo",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 78,
          "Value": "Ammunition for chemical weapons can be created by mixing the targeted chemical with bonding agent and storing it inside a vial that can later be loaded into a weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 79,
          "Value": "chemicalblobtrap",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 80,
          "Value": "Chemical blob traps can entangle their victims in deadly sludge formed out of various substances. \r\n\r\nThey are created by combining blob dispenser, special chemical trap case and the desired substance mixed with a bonding agent.\r\n\r\nDifferent substances have different side effects, while the quality of the blob dispenser determines the overall lethality of the trap.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 81,
          "Value": "healthhypo",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 82,
          "Value": "Health hypo can be created by mixing healthy animal blood with insectoid saliva and preserving the mixture with anticoagulant.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 83,
          "Value": "advancedhealthhypo",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 84,
          "Value": "Advanced health hypo can be created by mixing healthy animal blood with gel electrolyte and taurine.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 85,
          "Value": "adrenalineshot",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 86,
          "Value": "Adrenaline shot can easily be created by a skilled biologist from raw adrenaline.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 87,
          "Value": "morphineshot",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 88,
          "Value": "Morphine shot can easily be created by a skilled biologist from raw morphine.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 89,
          "Value": "nervosomnifer",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 90,
          "Value": "Nervosomnifer is an experimental pain reducing drug that requires rare exotic ingredients.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 91,
          "Value": "caltrops",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 92,
          "Value": "Caltrops can be crafted out of any metal. The quality of the metal does not influence the end product.\r\n\r\nOptionally the caltrops can be tipped with poison.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 93,
          "Value": "beartrap",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 94,
          "Value": "A simple mechanical trap designed to wound and ensnare the victim.\r\n\r\nOptionally, the metal jaws of a bear trap can be tipped with poison in order to inflict even more harm to the unsuspecting victim.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 95,
          "Value": "repairkit",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 96,
          "Value": "You can create repair kits from pieces of scrap. The type of scrap you use (metal, electronic, fabric) will determine the type of repair kit. Using additional scraps during construction will allow you to create more advanced repair kits.\r\n\r\nYou cannot mix different types of scrap.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 97,
          "Value": "vehiclerepairkit",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 98,
          "Value": "You can create vehicle repair kit from pieces of mechanical and electronic scrap, providing you are skilled enough.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 99,
          "Value": "recycleitem",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 100,
          "Value": "You can recycle repairable items to gain scraps that you can later use in crafting. \r\n\r\nThe type of scrap gained depends on the item's durability type and the amount depends on the item's current durability.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 101,
          "Value": "psionicheadband",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 102,
          "Value": "Psionic headband augments, and sometimes inhibits, various aspects of psionic invocation, depending on parts used in constructing it.\r\n\r\nThe basic psionic headband consists of the frame and a modulator. The latter determines which areas of psionic potential (psi schools) the headband focuses on.\r\n\r\nHeadband can also sport various enhancements.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 103,
          "Value": "combatgloves",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 104,
          "Value": "Combat gloves can be created from leather or metal. They can be reinforced with additional metal plating or sport enhancements such as spikes and blades.\r\n\r\nThey can even carry some manner of power module for that extra punch.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 105,
          "Value": "energyshieldemitter",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 106,
          "Value": "Energy shield emitters are used to absorb all or part of the damage directed at the user by expending electrical energy. The amount absorbed varies depending on the quality of the components used and the impact speed of an attack.\r\n\r\nThey can be crafted from a base, one or two modulators, energy core and optional enchancement.\r\n\r\nThe type modulator will determine how the absorbing capabilities are spread across the impact speed spectrum, though all shields generally perform better against higher impact speeds (high speed ballistic projectiles, energy weapons, explosions).\r\n\r\nQuality of the energy core will determine the capacity of the shield.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 107,
          "Value": "balaclava",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 108,
          "Value": "A balaclava is a form of cloth headwear that covers the whole head, exposing only part of the face.\r\n\r\nIt can be created out of any type of cloth.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 109,
          "Value": "tabiboots",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 110,
          "Value": "Tabi Boots are light form of footwear that offer little to no mechanical protection from attacks, but allow for agile movement.\r\n\r\nThey can be crafted from either cloth or leather.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 111,
          "Value": "taser",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 112,
          "Value": "Taser can be used to harm and stun living creatures and machines.\r\n\r\nIt can be crafted from an electroshock generator and an energy core.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 113,
          "Value": "throwingknives",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 114,
          "Value": "Throwing knives can be crafted out of any metal. The quality of the metal does not influence the end product.\r\n\r\nOptionally throwing knives can be tipped with poison.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 115,
          "Value": "shockshurikens",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 116,
          "Value": "Shock shurikens can be crafted out of any metal and a number of micro electroshock dischargers.\r\n\r\nAny battery can be used to charge up the shurikens.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 117,
          "Value": "irongut",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 118,
          "Value": "Irongut protects you from biological hazards. It can be created from taurine and gizzard enzymes.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 119,
          "Value": "trance",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 120,
          "Value": "Trance used to be a popular drug among psi users, but fell out of use due to rarity of its ingredients. You can bring it back though if you manage to extract black vitreous and mix it with psi catalyst.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 121,
          "Value": "aegis",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 122,
          "Value": "Aegis is a combat drug developed by the Biocorp for the Protectorate army. It can be created by combining morphine, adrenaline, and gizzard enzymes.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 123,
          "Value": "focusstim",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 124,
          "Value": "Focus stim is a combat drug that can be created by mixing adrenaline, taurine, and fresh blood.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 125,
          "Value": "jumpingbean",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 126,
          "Value": "Agility booster pill, popularly known as \"Jumping Bean\", can be created by mixing organic gel electrolyte with insectoid saliva. May cause hiccups.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 127,
          "Value": "incendiarygrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 128,
          "Value": "A makeshift incendiary grenade can be crafted from an empty bottle, a rag and any kind of incendiary substance.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 129,
          "Value": "gasgrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 130,
          "Value": "You can create a gas grenade by combining a substance with a starter mixture inside a thin grenade case.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 131,
          "Value": "shockbullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 132,
          "Value": "You can create 5mm shock bullets using bullet cases, any metal plate, and a number of micro electroshock dischargers.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 133,
          "Value": "incendiarybullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 134,
          "Value": "You can create 8.6mm incendiary bullets using bullet cases, any metal plate, and a high level incendiary substance.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 135,
          "Value": "microshrapnelbullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 136,
          "Value": "You can create 7.62mm micro-shrapnel bullets using bullet cases, any metal plate, and large quantities of metal scraps.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 137,
          "Value": "acidbullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 138,
          "Value": "You can create 9mm acid bullets using bullet cases, any metal plate, and a vial of regular acid.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 139,
          "Value": "explosivebullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 140,
          "Value": "You can create .44 explosive bullets using bullet cases, any metal plate, and a certain amount of hexogen.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 141,
          "Value": "contaminatedbullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 142,
          "Value": "You can create 12.7mm contaminated bullets using bullet cases, any metal plate, and a canister of toxic sludge.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 143,
          "Value": "disassembleitem",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 144,
          "Value": "Enables you to disassemble items that are marked as disassemble-able, obtaining the components from which it was constructed but with reduced quality.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 145,
          "Value": "infusedleather",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 146,
          "Value": "Infusing leather with fiber can enhance its properties.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 147,
          "Value": "flashbang",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 148,
          "Value": "You can create a flashbang grenade by filling a thin grenade case with magnesium powder.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 149,
          "Value": "bullhead",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 150,
          "Value": "Bullhead pill is a preventive medicament that stabilizes neural pathways and improves concentration, allowing you to handle physical and psychological stress better. It can be created by combining morphine, nidamental gel, and gizzard enzymes.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 151,
          "Value": "superhealthhypo",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 152,
          "Value": "Super health hypo can be created by mixing healthy animal blood, fusing enzyme, gyromitrin and, curiously, crawler poison.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 153,
          "Value": "regenerativemixture",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 154,
          "Value": "You can create a highly potent regenerative by mixing correct amounts of biofusive scoby, animal blood, and macrophage fluid. A clean blastema should then be soaked in this mixture before consuming the liquid.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 155,
          "Value": "psireinvigorator",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 156,
          "Value": "This pill should only be consumed to combat psi inhibiting conditions and disorders. It can be created by combining unsaturated psionic catalyst with adrenaline and statolith.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 157,
          "Value": "supersoldierdrug",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 158,
          "Value": "According to this blueprint you can create some sort of a \"Supersoldier Drug\" by combining the right amounts of muscarine, adrenaline, kynurenic acid, and prednisone solution. Considering the nature of these substances, this could be dangerous...",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 159,
          "Value": "thejuice",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 160,
          "Value": "According to Dude and this blueprint, you should be able to concoct the mythical serum known only as \"The Juice\".\r\n\r\nYou'll need some mushroom brew, unsaturated psionic catalyst, morphine and gyromitrin.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 161,
          "Value": "stingballgrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 162,
          "Value": "You can create a stingball grenade by filling a thin grenade case with hard rubber balls and adding some starter mixture.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 163,
          "Value": "spyingendoscope",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 164,
          "Value": "You can create a spying endoscope by combining adaptive lens, optical fiber and endoscope eyepiece.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 165,
          "Value": "bullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 166,
          "Value": "This blueprint describes how to reload a standard bullet of any caliber.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 167,
          "Value": "w2cbullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 168,
          "Value": "This blueprint describes how to reload a tungsten carbide armor piercing bullet of any caliber.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 169,
          "Value": "jhpbullets",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 170,
          "Value": "This blueprint describes how to reload a jacketed hollow point bullet of any caliber.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 171,
          "Value": "plasmagrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 172,
          "Value": "Plasma grenades are created by combining plasma micro-dischargers with any high energy battery (such as plasma or fusion cell) inside a thin grenade case.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 173,
          "Value": "plasmamine",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 174,
          "Value": "Plasma mines are created by combining plasma micro-dischargers with a pair of any high energy battery (such as plasma or fusion cell) inside a special plasma mine case.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 175,
          "Value": "psionicaccelerator",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 176,
          "Value": "You can create Psionic Accelerator by combining unsaturated psionic catalyst, gyromitrin and psi-somatic agent.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 177,
          "Value": "hypercerebrix",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 178,
          "Value": "You can create Hypercerebrix pill by combining cave ear poison, gyromitrin and phototannin.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 179,
          "Value": "coagulationshot",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 180,
          "Value": "You can create a coagulation shot by combining blood, some type of organic gel electrolyte and black collagen.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 181,
          "Value": "twitch",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 182,
          "Value": "You can create reflex boosting concoction, popularly known as Twitch, by combining adrenaline, dexytol and retrolytic enzyme.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 183,
          "Value": "thirdeye",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 184,
          "Value": "You can create the so-called \"Third Eye\" pill by combining salivinine, black vitreous and lophimidrine.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 185,
          "Value": "spear",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 186,
          "Value": "Spear is a primitive but versatile weapon that can be used for both offense and defense.\r\n\r\nPrecise spear strikes can bypass some of the living target's defense.\r\n\r\nIt can even carry some manner of power module for when the cold steel isn't enough.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 187,
          "Value": "machete",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 188,
          "Value": "Machetes can be crafted out of any metal and come in number of two variants depending on the mold used.\r\n\r\nIt's a deadly close quarters weapon that can deliver devastating wounds if used correctly, especially against an unarmored target.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 189,
          "Value": "shotgunshells",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 190,
          "Value": "This blueprint describes how to reload a shotgun shell with pellets of various sizes.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 191,
          "Value": "shotgun",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 192,
          "Value": "Shotguns can be created from frame and barrel parts. The type and quality of the frame will determine the shotgun's overall damage potential, while the barrel will dictate the spread and will also modify damage.\r\n\r\nAn optional component can also be added to further enhance the weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 193,
          "Value": "throwingnet",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 194,
          "Value": "You can create throwing nets from fabric scraps.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 195,
          "Value": "thingrenadecase",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 196,
          "Value": "You can create thin grenade cases (that are used in making certain grenades) from any type of metal plate.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 197,
          "Value": "fraggrenadecase",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 198,
          "Value": "You can create frag grenade cases from any type of metal plate.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 199,
          "Value": "thinminecase",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 200,
          "Value": "You can create thin mine cases (that are used in making certain mines) from any type of metal plate.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 201,
          "Value": "fragminecase",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 202,
          "Value": "You can create frag mine cases from any type of metal plate.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 203,
          "Value": "lockpicks",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 204,
          "Value": "You can create a set mechanical lockpicks from any type of metal plate. The quality of the plate will determine the lockpick quality. You'll also be able to create extra lockpicks when using metal of very best quality.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 205,
          "Value": "shiv",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 206,
          "Value": "With enough skill and effort you might be able to craft an actual shiv from a metal spike by adding a dirty rag to it.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 207,
          "Value": "motion",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 208,
          "Value": "This strange unconventional blueprint instructs you how to concoct the notorious Motion drug by combining psionic catalyst, gyromitrin, and psychodelic spores inside an inhalant container.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 209,
          "Value": "grenadelauncher",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 210,
          "Value": "Grenade launchers can shoot special grenades that damage all targets in the blast radius. The radius itself depends on the type of grenade used.\r\n\r\nIt can be created from frame and barrel parts. The caliber of the grenades is determined by the frame and the barrel, and can be either 25mm or 40mm.\r\n\r\nGrenade launcher will also require either a box magazine (25mm frames) or revolver-style magazine (40mm frames). Heavier magazines will make the weapon require more strength from the user.\r\n\r\nA number of optional components can also be added to further enhance the weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 211,
          "Value": "highexplosivelaunchergrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 212,
          "Value": "You can create high explosive launcher grenades using appropriate grenade cases (25mm or 40mm), hexogen, and TNT.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 213,
          "Value": "fraglaunchergrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 214,
          "Value": "You can create fragmentation launcher grenades using appropriate grenade cases (25mm or 40mm), TNT, and metal scraps.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 215,
          "Value": "thermobariclaunchergrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 216,
          "Value": "You can create the feared thermobaric launcher grenades using 40mm grenade cases, hexogen, and magnesium.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 217,
          "Value": "clusterlaunchergrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 218,
          "Value": "You can create cluster launcher grenades using 40mm grenade cases, TNT, metal plates, and starter mixture.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 219,
          "Value": "concussivelaunchergrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 220,
          "Value": "You can create concussive launcher grenades using 25mm grenade cases, TNT, magnesium, and small oxygen tanks.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 221,
          "Value": "incendiarylaunchergrenade",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 222,
          "Value": "You can create incendiary launcher grenades using 25mm grenade cases, TNT, and napalm C.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 223,
          "Value": "lightmachinegun",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 224,
          "Value": "Light machine gun (LMG) is a powerful automatic high-caliber weapon that has a high rate of fire, but also higher bullet spread and lower accuracy at long range.\r\n\r\nIt can be created from frame and barrel parts. The caliber is determined by the barrel, and can be either 9mm or .44.\r\n\r\nLMG will also require either a box magazine or ammo belt. Heavier magazines will make the weapon require more strength from the user.\r\n\r\nA number of optional components can also be added to further enhance the weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 225,
          "Value": "minigun",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 226,
          "Value": "Minigun is a powerful automatic-fire high-caliber weapon that has an incredible rate of fire once it reaches its full rotating speed. However, this comes at the cost of wide bullet spread and lower accuracy at long range.\r\n\r\nIt requires a lot of strength to operate properly.\r\n\r\nIt can be created from frame, barrel, and motor parts. The caliber is determined by the barrel, and can be either .44 or 12.7mm.\r\n\r\nThe type of motor used will determine the dynamics of the weapon's barrel rotation and hence the firing rate.\r\n\r\nIt will also require an ammo belt. Heavier ammo belts will make the weapon require more strength from the user. A secondary ammo belt can be attached as an extension, but the additional weight can potentially make the weapon even harder to wield.\r\n\r\nA number of optional components can also be added to further enhance the weapon.",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 227,
          "Value": "parafibroticregenerationcatalyst",
          "RecordTypeEnum": "BinaryObjectString"
        },
        {
          "ObjectId": 228,
          "Value": "You can create ampules of special regenerative concoction known as Parafibrotic Regeneration Catalyst, which can be used with the Technomedic exoskeleton suit. All you need is ampules, blood, organic gel electrolyte, morphine, and macrophage fluid.",
          "RecordTypeEnum": "BinaryObjectString"
        }
      ],
      "RecordTypeEnum": "ClassWithMembersAndTypes"
    },
    {
      "RecordTypeEnum": "MessageEnd"
    }
  ],
  "Compressed": true
}